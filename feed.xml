<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://harryvasanth.github.io/</id><title>Harry Vasanth</title><subtitle>Hello, I am Harry. Welcome to my personal home page. Here I write small guides and fixes for various platforms and applications.</subtitle> <updated>2022-11-14T22:02:47+00:00</updated> <author> <name>Harry Vasanth</name> <uri>https://harryvasanth.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://harryvasanth.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://harryvasanth.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Harry Vasanth </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Docker - Install Nginx Proxy Manager</title><link href="https://harryvasanth.github.io/posts/docker-nginx-proxy-manager/" rel="alternate" type="text/html" title="Docker - Install Nginx Proxy Manager" /><published>2022-10-24T22:14:09+01:00</published> <updated>2022-10-24T22:14:09+01:00</updated> <id>https://harryvasanth.github.io/posts/docker-nginx-proxy-manager/</id> <content src="https://harryvasanth.github.io/posts/docker-nginx-proxy-manager/" /> <author> <name>Harry Vasanth</name> </author> <category term="docker" /> <summary> Intro Install docker We will be running the Nginx Proxy Manager in docker stack. Hence, we will be needing a working docker installation. You can follow another one of my posts on Docker - Install and Configure. Set up Nginx Proxy Manager Create a new file docker-compose.yml file, please refer to the Nginx Proxy Manager documentation. Example Docker-Compose File: version: "3" services: ... </summary> </entry> <entry><title>Docker - Host a Demo CAS Server</title><link href="https://harryvasanth.github.io/posts/docker-demo-cas-server/" rel="alternate" type="text/html" title="Docker - Host a Demo CAS Server" /><published>2022-07-23T09:27:59+01:00</published> <updated>2022-08-08T16:01:34+01:00</updated> <id>https://harryvasanth.github.io/posts/docker-demo-cas-server/</id> <content src="https://harryvasanth.github.io/posts/docker-demo-cas-server/" /> <author> <name>Harry Vasanth</name> </author> <category term="docker" /> <summary> Intro Obtain keystore file In order to host a Demo CAS server, first of all we will need to generate a trusted authority signed certificate which can be obtained by following my pervious post on Linux - Let’s Encrypt for Java Apps. Install docker Furthermore, we will be running the Demo CAS Server in docker. Hence, we will be needing a working docker installation. You can follow another one... </summary> </entry> <entry><title>Linux - Let's Encrypt for Java Apps</title><link href="https://harryvasanth.github.io/posts/linux-lets-encrypt-java-apps/" rel="alternate" type="text/html" title="Linux - Let's Encrypt for Java Apps" /><published>2022-07-22T19:12:22+01:00</published> <updated>2022-08-08T16:01:34+01:00</updated> <id>https://harryvasanth.github.io/posts/linux-lets-encrypt-java-apps/</id> <content src="https://harryvasanth.github.io/posts/linux-lets-encrypt-java-apps/" /> <author> <name>Harry Vasanth</name> </author> <category term="linux" /> <summary> Intro Install certbot as mentioned in my previous post on Linux - Install Certbot. By default, certbot retrieves a certificate and installs it immediately on the web server by adding an extra parameter, eg. --apache for Apache HTTP Server. For the case of Docker - Demo CAS Server, it is just enough to retrieve only a certificate. This is done by adding the certonly parameter to the command as... </summary> </entry> <entry><title>Docker - Install and Configure</title><link href="https://harryvasanth.github.io/posts/docker-install-configure/" rel="alternate" type="text/html" title="Docker - Install and Configure" /><published>2022-07-21T12:01:20+01:00</published> <updated>2022-10-24T22:30:31+01:00</updated> <id>https://harryvasanth.github.io/posts/docker-install-configure/</id> <content src="https://harryvasanth.github.io/posts/docker-install-configure/" /> <author> <name>Harry Vasanth</name> </author> <category term="docker" /> <summary> Installation The Docker installation package available in the official Ubuntu repository may not be the latest version. To ensure we get the latest version, we’ll install Docker from the official Docker repository. To do that, we’ll add a new package source, add the GPG key from Docker to ensure the downloads are valid, and then install the package. First, install docker prerequisites: sudo ... </summary> </entry> <entry><title>GitHub - Source Repository Migations</title><link href="https://harryvasanth.github.io/posts/github-repository-migration/" rel="alternate" type="text/html" title="GitHub - Source Repository Migations" /><published>2021-01-28T21:29:01+00:00</published> <updated>2022-07-23T09:20:01+01:00</updated> <id>https://harryvasanth.github.io/posts/github-repository-migration/</id> <content src="https://harryvasanth.github.io/posts/github-repository-migration/" /> <author> <name>Harry Vasanth</name> </author> <category term="github" /> <summary> I have been looking for a way to migrate a private Git repository to GitHub without losing commit history. Using GIT Command Line Interface Create an empty GitHub repository. Clone the remote repository with the --bare option to obtain the clone with no working directory. git clone --bare https://&amp;lt;GIT_SERVER_FQDN&amp;gt;/&amp;lt;USER_NAME&amp;gt;/&amp;lt;REPO_NAME&amp;gt;.git ... </summary> </entry> </feed>
